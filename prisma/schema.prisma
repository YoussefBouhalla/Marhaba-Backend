generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  user_id      Int          @id @default(autoincrement())
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  user_name    String       @db.VarChar(30)
  first_name   String       @db.VarChar(30)
  last_name    String       @db.VarChar(30)
  email        String       @unique(map: "email") @db.VarChar(60)
  phone_number String       @db.VarChar(30)
  password     String       @db.VarChar(120)
  role         String       @db.VarChar(15)
  image        String       @db.VarChar(60)
  admins       admins[]
  clients      clients[]
  deliverers   deliverers[]
}

model admins {
  admin_id Int   @id @default(autoincrement())
  user_id  Int
  users    users @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "admins_ibfk_1")

  @@index([user_id], map: "user_id")
}

model clients {
  client_id Int        @id @default(autoincrement())
  address   String     @db.VarChar(120)
  user_id   Int
  users     users      @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "clients_ibfk_1")
  invoices  invoices[]

  @@index([user_id], map: "user_id")
}

model deliverers {
  deliverer_id   Int              @id @default(autoincrement())
  user_id        Int
  users          users            @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "deliverers_ibfk_1")
  taken_commands taken_commands[]

  @@index([user_id], map: "user_id")
}

model announcement_meal {
  announcement_id Int
  meal_id         Int
  announcements   announcements @relation(fields: [announcement_id], references: [announcement_id], onUpdate: Restrict, map: "announcement_meal_ibfk_1")
  meals           meals         @relation(fields: [meal_id], references: [meal_id], onUpdate: Restrict, map: "announcement_meal_ibfk_2")

  @@id([announcement_id, meal_id])
  @@index([meal_id], map: "meal_id")
}

model announcements {
  announcement_id   Int                 @id @default(autoincrement())
  title             String              @db.VarChar(120)
  description       String              @db.Text
  price             Int
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  announc_commands  announc_commands[]
  announcement_meal announcement_meal[]
}

model global_commands {
  command_number         Int                      @id @default(autoincrement())
  total_price            Int                      @default(0)
  total_quantity         Int                      @default(0)
  status                 String                   @default("packaged") @db.VarChar(30)
  taken                  Boolean                  @default(false)
  global_announ_commands global_announ_commands[]
  global_meals_commands  global_meals_commands[]
  invoices               invoices[]
  taken_commands         taken_commands[]
}

model invoices {
  invoice_id      Int             @id @default(autoincrement())
  gl_command_num  Int
  client_id       Int
  delivery_date   DateTime        @db.DateTime(0)
  payment_date    DateTime        @db.DateTime(0)
  clients         clients         @relation(fields: [client_id], references: [client_id], onUpdate: Restrict, map: "invoices_ibfk_1")
  global_commands global_commands @relation(fields: [gl_command_num], references: [command_number], onUpdate: Restrict, map: "invoices_ibfk_2")

  @@index([client_id], map: "client_id")
  @@index([gl_command_num], map: "gl_command_num")
}

model meal_commands {
  command_id            Int                     @id @default(autoincrement())
  meal_id               Int
  quantity              Int
  total_price           Int
  meals                 meals                   @relation(fields: [meal_id], references: [meal_id], onUpdate: Restrict, map: "meal_commands_ibfk_1")
  global_meals_commands global_meals_commands[]

  @@index([meal_id], map: "meal_id")
}

model meal_pictures {
  image_id Int    @id @default(autoincrement())
  path     String @db.VarChar(120)
  meal_id  Int
  meals    meals  @relation(fields: [meal_id], references: [meal_id], onUpdate: Restrict, map: "meal_pictures_ibfk_1")

  @@index([meal_id], map: "meal_id")
}

model meals {
  meal_id           Int                 @id @default(autoincrement())
  title             String              @db.VarChar(120)
  description       String              @db.Text
  price             Int
  type              meals_type
  announcement_meal announcement_meal[]
  meal_commands     meal_commands[]
  meal_pictures     meal_pictures[]
}

model taken_commands {
  deliverer_id    Int
  gl_command_num  Int
  deliverers      deliverers      @relation(fields: [deliverer_id], references: [deliverer_id], onUpdate: Restrict, map: "taken_commands_ibfk_2")
  global_commands global_commands @relation(fields: [gl_command_num], references: [command_number], onUpdate: Restrict, map: "taken_commands_ibfk_1")

  @@id([deliverer_id, gl_command_num])
  @@index([gl_command_num], map: "gl_command_num")
}

model announc_commands {
  command_id             Int                      @id @default(autoincrement())
  announcement_id        Int
  quantity               Int
  total_price            Int
  announcements          announcements            @relation(fields: [announcement_id], references: [announcement_id], onUpdate: Restrict, map: "announc_commands_ibfk_1")
  global_announ_commands global_announ_commands[]

  @@index([announcement_id], map: "announcement_id")
}

model global_announ_commands {
  gl_command_num    Int
  announ_command_id Int
  announc_commands  announc_commands @relation(fields: [announ_command_id], references: [command_id], onUpdate: Restrict, map: "global_announ_commands_ibfk_2")
  global_commands   global_commands  @relation(fields: [gl_command_num], references: [command_number], onUpdate: Restrict, map: "global_announ_commands_ibfk_1")

  @@id([gl_command_num, announ_command_id])
  @@index([announ_command_id], map: "announ_command_id")
}

model global_meals_commands {
  gl_command_num  Int
  meal_command_id Int
  global_commands global_commands @relation(fields: [gl_command_num], references: [command_number], onUpdate: Restrict, map: "global_meals_commands_ibfk_1")
  meal_commands   meal_commands   @relation(fields: [meal_command_id], references: [command_id], onUpdate: Restrict, map: "global_meals_commands_ibfk_2")

  @@id([gl_command_num, meal_command_id])
  @@index([meal_command_id], map: "meal_command_id")
}

enum meals_type {
  starter
  main
  dessert
  EMPTY_ENUM_VALUE @map("")
}
